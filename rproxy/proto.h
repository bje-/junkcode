/* This file is automatically generated with "make proto". DO NOT EDIT */

FILE *cache_open(char *request, char *mode);
FILE *cache_open_tmp(char *request, char *mode);
void cache_tmp_rename(char *request);
void cache_tmp_delete(char *request);
void comp_init(void);
ssize_t comp_write(ssize_t (*fn)(void *, char *, size_t), 
		   void *private, char *buf, size_t len);
void comp_flush(ssize_t (*fn)(void *, char *, size_t), void *private);
void decomp_init(void);
ssize_t decomp_read(ssize_t (*fn)(void *, char *, size_t), 
		    void *private, char *buf, size_t len);
void header_add(char *label, char *content);
void header_load(FILE *f);
char *header_content(char *label);
int header_ival(char *label);
void header_send(FILE *f);
void header_clear(void);
void header_remove(char *label);
void header_remove_list(char *label, char *content);
void header_add_list(char *label, char *content);
void exit_cleanup(int code);
int main(int argc, char *argv[]);
char *sig_generate(FILE *f);
void sig_decode(FILE *f_in, FILE *f_out, FILE *f_orig, FILE *f_cache, 
		ssize_t content_length);
void sig_encode(FILE *f_in, FILE *f_out, char *signature, FILE *f_cache,
		ssize_t content_length);
int open_socket_in(int type, int port, uint32 socket_addr);
int open_socket_out(char *host, int port);
void set_socket_options(int fd, char *options);
void start_accept_loop(int port, int (*fn)(int ));
char *body_load(FILE *f, int *content_length);
ssize_t read_write(FILE *f_in, FILE *f_out, FILE *f_copy, size_t size);
size_t stream_body(FILE *f_in, FILE *f_out, FILE *f_copy, int content_length);
void start_timer();
char *fgets_strip(char *s, int size, FILE *f);
char *xstrdup(char *s);
void *xrealloc(void *p, size_t length);
void *xmalloc(size_t length);
FILE *xfdopen(int fd, char *mode);
ssize_t read_all(FILE *f, char *buf, size_t size);
size_t base64_decode(char *s);
void base64_encode(unsigned char *buf, int n, char *out);
int vslprintf(char *str, int n, const char *format, va_list ap);
int slprintf(char *str, int n, char *format, ...);
BOOL next_token(char **ptr,char *buff,char *sep);
void string_sub(char *s,const char *pattern,const char *insert);
BOOL trim_string(char *s,const char *front,const char *back);
void logmsg(const char *format, ...);
void errmsg(const char *format, ...);
void file_save(const char *fname, void *data, size_t length);
float cputime(void);
